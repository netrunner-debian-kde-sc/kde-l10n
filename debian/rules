#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    MAKEFLAGS += -j$(NUMJOBS)
endif

# Value of the kde-l10n:Depends substvar. Common dependencies for each l10n
# package. 
L10N_DEPENDS := libkdecore5 (>= 4:4.4)

L10N_PREFIX := kde-l10n
I18N_PREFIX := kde-i18n
#L10N_VERSION := $(shell cat debian/changelog | head -n1 | sed 's/.*(\([[:digit:]]\+:\)\?\(.\+\)-.\+).*/\2/')
L10N_LANGS := $(filter-out debian,$(subst ./,,$(shell find . -mindepth 1 -maxdepth 1 -type d ! -name .pc ! -name .git)))
L10N_DIRS = $(L10N_LANGS)
L10N_PACKAGES := $(patsubst %,$(L10N_PREFIX)-%,$(L10N_LANGS))

I18N_LANGS := $(patsubst %=,%,$(filter %=,$(subst =,= ,$(filter $(patsubst %,\%=%,$(L10N_LANGS)),$(shell grep -v '^\#' debian/languages-in-lenny)))))
I18N_PACKAGES := $(patsubst %,$(I18N_PREFIX)-%,$(I18N_LANGS))

# Support variables to be used in targets
cur_lang = $(word 2,$(subst __, ,$@))
cur_lang_dir = $(cur_lang)
cur_lang_builddir = $(cur_lang_dir)/build
cur_pkg = $(L10N_PREFIX)-$(cur_lang)

# Stamps
STAMP_BUILD := $(patsubst %,debian/stamp__%__build,$(L10N_LANGS))
L10N_INSTALL := $(patsubst %,install__%,$(L10N_LANGS))
L10N_CLEAN := $(patsubst %,clean__%,$(L10N_LANGS))

# debian/control checks
L10N_PACKAGES_IN_CONTROL := $(shell dh_listpackages | grep '$(L10N_PREFIX)')
L10N_NOTEXIST_IN_CONTROL := $(filter-out $(L10N_PACKAGES_IN_CONTROL),$(L10N_PACKAGES))
L10N_EXCESS_IN_CONTROL := $(filter-out $(L10N_PACKAGES),$(L10N_PACKAGES_IN_CONTROL))

I18N_PACKAGES_IN_CONTROL := $(shell dh_listpackages | grep '$(I18N_PREFIX)')
I18N_NOTEXIST_IN_CONTROL := $(filter-out $(I18N_PACKAGES_IN_CONTROL),$(I18N_PACKAGES))
I18N_EXCESS_IN_CONTROL := $(filter-out $(I18N_PACKAGES),$(I18N_PACKAGES_IN_CONTROL))

check_control:
	@test -z "$(L10N_NOTEXIST_IN_CONTROL)" || \
		(echo "-- ERROR: debian/control is missing language packages: $(L10N_NOTEXIST_IN_CONTROL)" && false)
	@test -z "$(L10N_EXCESS_IN_CONTROL)" || \
		(echo "-- ERROR: debian/control has excess language packages: $(L10N_EXCESS_IN_CONTROL)" && false)
	@test -z "$(I18N_NOTEXIST_IN_CONTROL)" || \
		(echo "-- ERROR: debian/control is missing $(I18N_PREFIX) language packages: $(I18N_NOTEXIST_IN_CONTROL)" && false)
	@test -z "$(I18N_EXCESS_IN_CONTROL)" || \
		(echo "-- ERROR: debian/control has excess $(I18N_PREFIX) language packages: $(I18N_EXCESS_IN_CONTROL)" && false)

prepare_build: check_control
	dh_testdir

build: $(STAMP_BUILD)

$(STAMP_BUILD): | prepare_build
	# Building the '$(cur_lang)' language ...
	mkdir $(cur_lang_builddir); cd $(cur_lang_builddir) && \
	    cmake .. -DCMAKE_INSTALL_PREFIX="/usr" -DCMAKE_VERBOSE_MAKEFILE=ON && \
	    $(MAKE)
	touch $@

prepare_install:
	dh_testdir
	dh_testroot
	dh_prep

install: $(L10N_INSTALL)
	# Installed successfully

$(L10N_INSTALL): | prepare_install
	# Installing '$(cur_lang)' to the '$(cur_pkg)' package
	cd $(cur_lang_builddir) && $(MAKE) install DESTDIR=$(CURDIR)/debian/$(cur_pkg)

prepare_clean:
	dh_testdir

clean: $(L10N_CLEAN)
	rm -f debian/stamp__*
	dh_clean

# Delete build directories
$(L10N_CLEAN): prepare_clean
	rm -rf $(cur_lang_builddir)

binary-arch:
	# No architecture dependent files available

binary-indep: build install
	dh_testroot
	dh_testdir
	dh_installdocs
	dh_installmenu
	dh_installchangelogs
	dh_strip
	dh_compress -X.docbook -X.css -X-license -X.dcl -X.bz2
	dh_link
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol -- -V'kde-l10n:Depends=$(L10N_DEPENDS)'
	dh_md5sums
	dh_builddeb

# Below here is fairly generic really
binary: binary-indep binary-arch

.PHONY: binary binary-arch binary-indep clean patch build install
.PHONY: check_control prepare_build prepare_install $(L10N_INSTALL) $(L10N_CLEAN)
